증감 연산자: ++,--

a=10

b=++a;
b=--a;
b=a++;
b=a--;

실행 결과=
a=11, b=11;
a=9, b=9;
a=11, b=10;
a=9, b=10;

#include <stdio.h>

int main(void)
{
  int a, b, c;
  a=10; b=20; c=30;

  a= ++b;

  c= b++;
  printf("a = %d, b = %d, c = %d\n\n", a,b,c);

  a= ++b + ++c;
  printf("a = ++b + ++c 문장 실행 후\n");
  printf("a = %d, b = %d, c = %d\n\n", a,b,c);

  a= b++ + c++;
  printf("a = b++ + ++c 문장 실행 후\n");
  printf("a = %d, b = %d, c = %d\n\n", a,b,c);

  return 0;
}

실행 결과 =
a=21, b=22, c=21
a=++b + ++c 문장 실행 후
a=45, b=23, c=22
a=b++ + c++ 문장 실행 후
a=45, b=24, c=23

정리: ++a는 변수값을 먼저 1만큼 증가 후 적용, a++은 변수값을 적용 후 1 증가한다.

나눗셈 연산:
/ == 몫만 값으로 저장, 나머지는 삭제
% == 나머지만 저장

관계 연산자:
두 수 사이의 대소 관계와 특정 조건을 검사할때 사용
>, <, >=, <=, ==, !=

논리 연산자:
조건 여러 개를 결합해서 판정하는 연산자
AND, OR, NOT  &&, ||, !
참일때는 1, 거짓일때는 0으로 결과를 표시한다

비트 연산자:
피연산자 정숫값을 비트 단위로 논리연산을 수행하는 연산자
&, |, ^, ~, <<, >>

비트 논리곱(&) : a b 모두 1 이면 1
비트 논리합(|) : a b 하나라도 1 이면 1
비트 배타적 논리합(^) : a b 가 서로 다르면 1
비트 부정(~) : 1은 0으로 0은 1로 바꿈

비트 왼쪽 시프트(<<), 오른쪽 시프트(>>) :
왼쪽으로 1회 시프트는 2^1, 2회는 2^2, 3회는 2^3을 곱하는 셈
오른쪽은 반대로 나누기를 하는 셈








