#include <stdio.h>

int main(void)
{
	char *pC = "C programming";
	printf("문자열을 변환기호를 이용해서 출력\n");
	printf("%s\n", pC);
	printf("반복문을 이용해 한 글자씩 출력\n");
	while (*pC)
		printf("%c", *pC**);
	printf("\n");

	return 0;
}


배열 포인터로 문자열을 리터럴 하는 단계이지만
일반적인 C언어에서는 위의 코드가 정상적으로 작동되는 반면 C++에서는 char이 문자열을 리터럴 할수 없어서
const char *pC = "C programming"; 으로 바꿔서 작성함 
그러지 않으면 오류발생으로 코드 실행 불가



#if 0
int main(void)
{
	const char* pStr[] = { "english", "math", "korean" };
	const char subjet[][8] = { "english", "math", "korean" };
	int i;
	printf("포인터 배열을 이용해서 문자열을 출력합니다.\n");
	for (i = 0; i < 3; i++)
		printf("pStr[%d] = %s\n", i, pStr[i]);

	printf("2차원 배열을 이용해서 문자열을 출력합니다.\n");
	for (i = 0; i < 3; i++)
		printf("subject[%d] = %s\n", i, subjet[i]);

	return 0;
}
#endif 02

#if 0
int main(void)
{
	const char* pC = "c language";

	while (*pC)
	{
		printf("%c", *pC - 32);
		pC++;
	}
	printf("\n");
	return 0;
}
#endif 03

#if 0
int strleng(char* ch);
int main(void)
{
	int len;
	char str[] = "c language and data structure";
	len = strleng(str);
	printf("문자열의 크기는 %d다.\n", len);
	return 0;
}

int strleng(char* ch)
{
	int index;
	for (index = 0; *(ch + index) != '\0'; index++);

	return index;
}
#endif 04

#if 05

struct list {
	char name;
	char gender;
	int age;
};

int main(void)
{
	struct list st1 = { 'T', 'M', 25 };

	printf("구조체 list의 크기는 %d이다.\n", sizeof(struct list));
	printf("구조체 객체 st1의 크기는 %d이다.\n", sizeof(st1));

	return 0;
}
#endif 05

실행결과:
구조체 list의 크기는 8이다.
구조체 객체 st1의 크기는 8이다.

C:\test 12\Project2\x64\Debug\Project2.exe(프로세스 4708개)이(가) 종료되었습니다(코드: 0개).
이 창을 닫으려면 아무 키나 누르세요...









#if 06
struct list {
	char name;
	char gender;
	int age;
};

int main(void)
{
	struct list st1, st2;
	st1.name = 'T';
	st1.gender = 'M';
	st1.age = 25;

	st2.name = 'S';
	st2.gender = 'F';
	st2.age = 28;

	printf("이름 성별 나이\n");
	printf("------------------\n");
	printf(" %c %c %d\n", st1.name, st1.gender, st1.age);
	printf(" %c %c %d\n", st2.name, st2.gender, st2.age);

	return 0;
}
#endif 06

실행결과:
이름 성별 나이
------------------
 T M 25
 S F 28


#if 07
struct ThreeDime {
	double x;
	double y;
	double z;
};

typedef struct ThreeDime ThreeDime;

int main(void)
{

	ThreeDime A1 = { 3, 1, 8 };

	ThreeDime* pA1 = &A1;

	printf("3차원 점 A1의 x : %.2lf, y : %.2lf, z : %.2lf이다.\n", pA1->x, pA1->y, pA1->z);

	return 0;
}

#endif 07

실행 결과:
3차원 점 A1의 x : 3.00, y : 1.00, z : 8.00이다.

C:\test 12\Project2\x64\Debug\Project2.exe(프로세스 17936개)이(가) 종료되었습니다(코드: 0개).
이 창을 닫으려면 아무 키나 누르세요...



#if 01
struct ThreeDime {
	double x;
	double y;
	double z;
 };

typedef struct ThreeDime ThreeDime;

double Distance1(ThreeDime a)
{
	double d;
	d = sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
	return d;
}
double Distance2(ThreeDime a, ThreeDime b)
{
	double d;
	d = sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y) + (a.z - b.z) * (a.z - b.z));
	return d;
}

ThreeDime SymOri(ThreeDime a)
{
	a.x = -a.x;
	a.y = -a.y;
	a.z = -a.z;
	return a;
}

int main(void)
{
	double D1, D2;
	ThreeDime A1, A2, A3;

	printf("3차원 점 A1의 x, y, z 좌표를 입력하시오.\n");
	scanf("%lf %lf %lf", &A1.x, &A1.y, &A1.z);

	printf("\n3차원 점 A2의 x, y, z 좌표를 입력하시오.\n");
	scanf("%lf %lf %lf", &A2.x, &A2.y, &A2.z);

	D1 = Distance1(A1);

	D2 = Distance2(A1, A2);

	A3 = SymOri(A1);

	printf("\n점 A1과 원점의 거리는 %.2lf이다.\n", D1);
	printf("점 A1과 점 A2의 거리는 %.2lf이다.\n", D2);
	printf("점 A1을 원점에 대칭시킨 점의 x : %.2lf, y : %.2lf, z : %.2lf이다.\n", A3.x, A3.y, A3.z);

	return 0;
}
#endif 08



실행결과:
3차원 점 A1의 x, y, z 좌표를 입력하시오.
1
0
5

3차원 점 A2의 x, y, z 좌표를 입력하시오.
3
8
2

점 A1과 원점의 거리는 5.10이다.
점 A1과 점 A2의 거리는 8.77이다.
점 A1을 원점에 대칭시킨 점의 x : -1.00, y : -0.00, z : -5.00이다.



#if 01
int main(void)
{
	enum { yellow, red, blue, green } color;
	printf("원하는 색을 입력하세요.\n");
	printf("0번 : 노란색, 1번 : 빨간색\n");
	printf("2번 : 파란색, 3번 : 초록색\n");
	scanf("%d", &color);

	if (color == yellow) printf("노란색입니다.\n");
	else if (color == red) printf("빨간색입니다.\n");
	else if (color == blue) printf("파란색입니다.\n");
	else if (color == green) printf("초록색입니다.\n");

	return 0;
}
#endif 09

실행결과:
원하는 색을 입력하세요.
0번 : 노란색, 1번 : 빨간색
2번 : 파란색, 3번 : 초록색
3
초록색입니다.
