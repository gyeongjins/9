#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>


struct Books {
    char Title[50];
    char Authors[50];
    char Press[50];
    int Page;
    int Price;
    char borrow[20]; 
};


struct Books library[] = {
    {"Truth", "John", "Century", 300, 20000, "available"},
    {"Love", "Paul", "Goods", 200, 15000, "available"},
    {"Joy", "James", "Cookie", 250, 18000, "available"},
    {"Thanks", "Mark", "Saejong", 240, 21000, "available"},
    {"God", "Johnson", "Jungjo", 450, 35000, "available"}
};


void printBookList();
void searchBook();
void borrowBook();
void returnBook();

int main() {
    int choice;

    do {
        printf("\n[도서관 메뉴]\n");
        printf("1. 도서목록  2. 검색  3. 대출  4. 반납  5. 종료\n");
        printf("메뉴를 선택하세요: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printBookList();
            break;
        case 2:
            searchBook();
            break;
        case 3:
            borrowBook();
            break;
        case 4:
            returnBook();
            break;
        case 5:
            printf("프로그램을 종료합니다.\n");
            break;
        default:
            printf("잘못된 선택입니다. 다시 선택하세요.\n");
            break;
        }
    } while (choice != 5);

    return 0;
}


void printBookList() {
    printf("\n도서 목록\n");
    printf("%-15s%-15s%-15s%-10s%-10s%-15s\n", "Title", "Authors", "Press", "Page", "Price", "Borrow");
    printf("------------------------------------------------------------\n");

    for (int i = 0; i < sizeof(library) / sizeof(library[0]); i++) {
        printf("%-15s%-15s%-15s%-10d%-10d%-15s\n", library[i].Title, library[i].Authors, library[i].Press, library[i].Page, library[i].Price, library[i].borrow);
    }
}


void searchBook() {
    char searchTitle[50];
    int found = 0;

    printf("검색할 도서를 입력하세요: ");
    scanf("%s", searchTitle);

    for (int i = 0; i < sizeof(library) / sizeof(library[0]); i++) {
        
        if (_stricmp(searchTitle, library[i].Title) == 0) {
            printf("%-15s%-15s%-15s%-10s%-10s%-15s\n", "Title", "Authors", "Press", "Page", "Price", "Borrow");
            printf("------------------------------------------------------------\n");
            printf("%-15s%-15s%-15s%-10d%-10d%-15s\n", library[i].Title, library[i].Authors, library[i].Press, library[i].Page, library[i].Price, library[i].borrow);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("해당 도서를 찾을 수 없습니다.\n");
    }
}


void borrowBook() {
    char borrowTitle[50];
    int found = 0;

    printf("대출할 도서를 입력하세요: ");
    scanf("%s", borrowTitle);

    for (int i = 0; i < sizeof(library) / sizeof(library[0]); i++) {
        if (_stricmp(borrowTitle, library[i].Title) == 0) {
            if (_stricmp(library[i].borrow, "available") == 0) {
                strcpy(library[i].borrow, "borrowing");
                printf("'%s' 책이 대출되었습니다.\n", borrowTitle);
            }
            else {
                printf("죄송합니다. '%s' 책은 이미 대출 중입니다.\n", borrowTitle);
            }
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("해당 도서를 찾을 수 없습니다.\n");
    }
}


void returnBook() {
    char returnTitle[50];
    int found = 0;

    printf("반납할 도서를 입력하세요: ");
    scanf("%s", returnTitle);

    for (int i = 0; i < sizeof(library) / sizeof(library[0]); i++) {
        if (_stricmp(returnTitle, library[i].Title) == 0) {
            if (_stricmp(library[i].borrow, "borrowing") == 0) {
                strcpy(library[i].borrow, "available");
                printf("'%s' 책이 반납되었습니다.\n", returnTitle);
            }
            else {
                printf("죄송합니다. '%s' 책은 대출 중이 아닙니다.\n", returnTitle);
            }
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("해당 도서를 찾을 수 없습니다.\n");
    }
}
